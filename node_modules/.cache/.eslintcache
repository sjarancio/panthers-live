[{"/Users/sjarancio/Desktop/panthers-live/panthers-live/src/index.js":"1","/Users/sjarancio/Desktop/panthers-live/panthers-live/src/reportWebVitals.js":"2","/Users/sjarancio/Desktop/panthers-live/panthers-live/src/App.js":"3","/Users/sjarancio/Desktop/panthers-live/panthers-live/src/redux/store.js":"4","/Users/sjarancio/Desktop/panthers-live/panthers-live/src/Home.js":"5","/Users/sjarancio/Desktop/panthers-live/panthers-live/src/Roadmap.js":"6","/Users/sjarancio/Desktop/panthers-live/panthers-live/src/About.js":"7","/Users/sjarancio/Desktop/panthers-live/panthers-live/src/redux/data/dataReducer.js":"8","/Users/sjarancio/Desktop/panthers-live/panthers-live/src/components/Navbar/indexx.js":"9","/Users/sjarancio/Desktop/panthers-live/panthers-live/src/redux/blockchain/blockchainReducer.js":"10","/Users/sjarancio/Desktop/panthers-live/panthers-live/src/redux/blockchain/blockchainActions.js":"11","/Users/sjarancio/Desktop/panthers-live/panthers-live/src/styles/globalStyles.js":"12","/Users/sjarancio/Desktop/panthers-live/panthers-live/src/redux/data/dataActions.js":"13","/Users/sjarancio/Desktop/panthers-live/panthers-live/src/timelineElements.js":"14","/Users/sjarancio/Desktop/panthers-live/panthers-live/src/components/Navbar/NavbarElements.js":"15"},{"size":580,"mtime":1637700442266,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1637698910801,"results":"18","hashOfConfig":"17"},{"size":552,"mtime":1637700384642,"results":"19","hashOfConfig":"17"},{"size":559,"mtime":1637700236783,"results":"20","hashOfConfig":"17"},{"size":17335,"mtime":1637718690876,"results":"21","hashOfConfig":"17"},{"size":2264,"mtime":1637700482439,"results":"22","hashOfConfig":"17"},{"size":1389,"mtime":1637701379927,"results":"23","hashOfConfig":"17"},{"size":852,"mtime":1637700210864,"results":"24","hashOfConfig":"17"},{"size":509,"mtime":1637699958922,"results":"25","hashOfConfig":"17"},{"size":926,"mtime":1637700123732,"results":"26","hashOfConfig":"17"},{"size":2606,"mtime":1637700120300,"results":"27","hashOfConfig":"17"},{"size":1813,"mtime":1637700287067,"results":"28","hashOfConfig":"17"},{"size":948,"mtime":1637700188610,"results":"29","hashOfConfig":"17"},{"size":2439,"mtime":1637700505517,"results":"30","hashOfConfig":"17"},{"size":1735,"mtime":1637699957378,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"197h2ly",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sjarancio/Desktop/panthers-live/panthers-live/src/index.js",[],"/Users/sjarancio/Desktop/panthers-live/panthers-live/src/reportWebVitals.js",[],"/Users/sjarancio/Desktop/panthers-live/panthers-live/src/App.js",[],"/Users/sjarancio/Desktop/panthers-live/panthers-live/src/redux/store.js",[],"/Users/sjarancio/Desktop/panthers-live/panthers-live/src/Home.js",["66","67","68","69"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n    padding: 10px;\n    border-radius: 50px;\n    border: none;\n    background-color: var(--secondary);\n    padding: 10px;\n    font-weight: bold;\n    color: var(--secondary-text);\n    width: 100px;\n    cursor: pointer;\n    box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n    -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n    -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n    :active {\n        box-shadow: none;\n        -webkit-box-shadow: none;\n        -moz-box-shadow: none;\n    }\n`;\n\nexport const StyledRoundButton = styled.button`\n    padding: 10px;\n    border-radius: 100%;\n    border: none;\n    background-color: var(--primary);\n    padding: 10px;\n    font-weight: bold;\n    font-size: 15px;\n    color: var(--primary-text);\n    width: 30px;\n    height: 30px;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n    -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n    -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n    :active {\n        box-shadow: none;\n        -webkit-box-shadow: none;\n        -moz-box-shadow: none;\n    }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n    justify-content: stretched;\n    align-items: stretched;\n    width: 100%;\n    @media (min-width: 767px) {\n        flex-direction: row;\n    }\n`;\n\nexport const StyledLogo = styled.img`\n    width: 200px;\n    @media (min-width: 767px) {\n        width: 300px;\n    }\n    transition: width 0.5s;\n    transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n    box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n    border: 4px dashed var(--secondary);\n    background-color: var(--accent);\n    border-radius: 100%;\n    width: 200px;\n    @media (min-width: 900px) {\n        width: 250px;\n    }\n    @media (min-width: 1000px) {\n        width: 300px;\n    }\n    transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction Home() {\n    const dispatch = useDispatch();\n    const blockchain = useSelector((state) => state.blockchain);\n    const data = useSelector((state) => state.data);\n    const [claimingNft, setClaimingNft] = useState(false);\n    const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n    const [mintAmount, setMintAmount] = useState(1);\n    const [CONFIG, SET_CONFIG] = useState({\n        CONTRACT_ADDRESS: \"\",\n        SCAN_LINK: \"\",\n        NETWORK: {\n            NAME: \"\",\n            SYMBOL: \"\",\n            ID: 0,\n        },\n        NFT_NAME: \"\",\n        SYMBOL: \"\",\n        MAX_SUPPLY: 1,\n        WEI_COST: 0,\n        DISPLAY_COST: 0,\n        GAS_LIMIT: 0,\n        MARKETPLACE: \"\",\n        MARKETPLACE_LINK: \"\",\n        SHOW_BACKGROUND: false,\n    });\n\n    const claimNFTs = () => {\n        let cost = CONFIG.WEI_COST;\n        let gasLimit = CONFIG.GAS_LIMIT;\n        let totalCostWei = String(cost * mintAmount);\n        let totalGasLimit = String(gasLimit * mintAmount);\n        console.log(\"Cost: \", totalCostWei);\n        console.log(\"Gas limit: \", totalGasLimit);\n        setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n        setClaimingNft(true);\n        blockchain.smartContract.methods\n            .mint(mintAmount)\n            .send({\n                gasLimit: String(totalGasLimit),\n                to: CONFIG.CONTRACT_ADDRESS,\n                from: blockchain.account,\n                value: totalCostWei,\n            })\n            .once(\"error\", (err) => {\n                console.log(err);\n                setFeedback(\"Sorry, something went wrong please try again later.\");\n                setClaimingNft(false);\n            })\n            .then((receipt) => {\n                console.log(receipt);\n                setFeedback(\n                `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n                );\n                setClaimingNft(false);\n                dispatch(fetchData(blockchain.account));\n            });\n    };\n\n    const decrementMintAmount = () => {\n        let newMintAmount = mintAmount - 1;\n        if (newMintAmount < 1) {\n            newMintAmount = 1;\n        }\n        setMintAmount(newMintAmount);\n    };\n\n    const incrementMintAmount = () => {\n        let newMintAmount = mintAmount + 1;\n        if (newMintAmount > 10) {\n            newMintAmount = 10;\n        }\n        setMintAmount(newMintAmount);\n    };\n\n    const getData = () => {\n        if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n            dispatch(fetchData(blockchain.account));\n        }\n    };\n\n    const getConfig = async () => {\n        const configResponse = await fetch(\"/config/config.json\", {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\",\n            },\n        });\n        const config = await configResponse.json();\n        SET_CONFIG(config);\n    };\n\n    useEffect(() => {\n        getConfig();\n    }, []);\n\n    useEffect(() => {\n        getData();\n    }, [blockchain.account]);\n\n    return (\n        <s.Screen>\n            <s.Container\n                flex={1}\n                ai={\"center\"}\n                style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n                image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\n            >\n                <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\n                <s.SpacerSmall />\n                <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n                    <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n                        <StyledImg alt={\"example\"} src={\"/config/images/example.gif\"} />\n                    </s.Container>\n                    <s.SpacerLarge />\n                    <s.Container\n                        flex={2}\n                        jc={\"center\"}\n                        ai={\"center\"}\n                        style={{\n                            backgroundColor: \"var(--accent)\",\n                            padding: 24,\n                            borderRadius: 24,\n                            border: \"4px dashed var(--secondary)\",\n                            boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n                        }}\n                    >\n                        <s.TextTitle\n                            style={{\n                                textAlign: \"center\",\n                                fontSize: 50,\n                                fontWeight: \"bold\",\n                                color: \"var(--accent-text)\",\n                            }}\n                        >\n                            {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n                        </s.TextTitle>\n                        <s.TextDescription\n                            style={{\n                                textAlign: \"center\",\n                                color: \"var(--primary-text)\",\n                            }}\n                        >\n                            {/* <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                                {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n                            </StyledLink> */}\n                        </s.TextDescription>\n                        <s.SpacerSmall />\n                        {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n                            <>\n                                <s.TextTitle\n                                    style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                                >\n                                    The sale has ended.\n                                </s.TextTitle>\n                                <s.TextDescription\n                                    style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                                >\n                                    You can still find {CONFIG.NFT_NAME} on\n                                </s.TextDescription>\n                                <s.SpacerSmall />\n                                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                                    {CONFIG.MARKETPLACE}\n                                </StyledLink>\n                            </>\n                        ) : (\n                            <>\n                                <s.TextTitle\n                                    style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                                >\n                                    1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\n                                    {CONFIG.NETWORK.SYMBOL}.\n                                </s.TextTitle>\n                                <s.SpacerXSmall />\n                                <s.TextDescription\n                                    style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                                >\n                                    Excluding gas fees.\n                                </s.TextDescription>\n                                <s.SpacerSmall />\n                                {blockchain.account === \"\" ||\n                                blockchain.smartContract === null ? (\n                                    <s.Container ai={\"center\"} jc={\"center\"}>\n                                        <s.TextDescription\n                                            style={{\n                                                textAlign: \"center\",\n                                                color: \"var(--accent-text)\",\n                                            }}\n                                        >\n                                            {/* Connect to the {CONFIG.NETWORK.NAME} network */}\n                                            The Official Release Date for the Peaky Panthers will be announced shortly! Check out our Road map for more info! Stay tuned!!!\n                                        </s.TextDescription>\n                                        <s.SpacerSmall />\n                                        {/* <StyledButton\n                                            onClick={(e) => {\n                                                e.preventDefault();\n                                                dispatch(connect());\n                                                getData();\n                                            }}\n                                        >\n                                            CONNECT\n                                        </StyledButton> */}\n                                        {blockchain.errorMsg !== \"\" ? (\n                                            <>\n                                                <s.SpacerSmall />\n                                                <s.TextDescription\n                                                    style={{\n                                                        textAlign: \"center\",\n                                                        color: \"var(--accent-text)\",\n                                                    }}\n                                                >\n                                                    {blockchain.errorMsg}\n                                                </s.TextDescription>\n                                            </>\n                                        ) : null}\n                                    </s.Container>\n                                ) : (\n                                    <>\n                                        <s.TextDescription\n                                            style={{\n                                                textAlign: \"center\",\n                                                color: \"var(--accent-text)\",\n                                            }}\n                                        >\n                                            {feedback}\n                                        </s.TextDescription>\n                                        <s.SpacerMedium />\n                                        <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                                            <StyledRoundButton\n                                                style={{ lineHeight: 0.4 }}\n                                                disabled={claimingNft ? 1 : 0}\n                                                onClick={(e) => {\n                                                    e.preventDefault();\n                                                    decrementMintAmount();\n                                                }}\n                                            >\n                                                -\n                                            </StyledRoundButton>\n                                            <s.SpacerMedium />\n                                            <s.TextDescription\n                                                style={{\n                                                    textAlign: \"center\",\n                                                    color: \"var(--accent-text)\",\n                                                }}\n                                            >\n                                                {mintAmount}\n                                            </s.TextDescription>\n                                            <s.SpacerMedium />\n                                            <StyledRoundButton\n                                                disabled={claimingNft ? 1 : 0}\n                                                onClick={(e) => {\n                                                    e.preventDefault();\n                                                    incrementMintAmount();\n                                                }}\n                                            >\n                                                +\n                                            </StyledRoundButton>\n                                        </s.Container>\n                                        <s.SpacerSmall />\n                                        <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                                            <StyledButton\n                                                disabled={claimingNft ? 1 : 0}\n                                                onClick={(e) => {\n                                                    e.preventDefault();\n                                                    claimNFTs();\n                                                    getData();\n                                                }}\n                                            >\n                                                {claimingNft ? \"BUSY\" : \"BUY\"}\n                                            </StyledButton>\n                                        </s.Container>\n                                    </>\n                                )}\n                            </>\n                        )}\n                        <s.SpacerMedium />\n                    </s.Container>\n                    <s.SpacerLarge />\n                    <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n                        <StyledImg\n                            alt={\"example\"}\n                            src={\"/config/images/example.gif\"}\n                            style={{ transform: \"scaleX(-1)\" }}\n                        />\n                    </s.Container>\n                </ResponsiveWrapper>\n                <s.SpacerMedium />\n                <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n                    <s.TextDescription\n                        style={{\n                            textAlign: \"center\",\n                            color: \"var(--primary-text)\",\n                        }}\n                    >\n                        Please make sure you are connected to the right network (\n                        {CONFIG.NETWORK.NAME} ) and the correct address. Please note:\n                        Once you make the purchase, you cannot undo this action.\n                        Welcome to the Peaky Panthers community!\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <s.TextDescription\n                        style={{\n                            textAlign: \"center\",\n                            color: \"var(--primary-text)\",\n                        }}\n                    >\n                        {/* We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract to\n                        successfully mint your NFT. We recommend that you don't lower the\n                        gas limit. */}\n                    </s.TextDescription>\n                </s.Container>\n            </s.Container>\n        </s.Screen>\n    );\n}\n\nexport default Home;\n","/Users/sjarancio/Desktop/panthers-live/panthers-live/src/Roadmap.js",["70"],"import \"./App.css\";\nimport { ReactComponent as WorkIcon } from \"./work.svg\";\nimport { ReactComponent as SchoolIcon } from \"./school.svg\";\n\nimport timelineElements from \"./timelineElements\";\n\nimport {\n  VerticalTimeline,\n  VerticalTimelineElement,\n} from \"react-vertical-timeline-component\";\n\nimport \"react-vertical-timeline-component/style.min.css\";\n\nfunction Roadmap() {\n  let workIconStyles = { background: \"#FF0000\" };\n  let schoolIconStyles = { background: \"#FF0000\" };\n  const styleObj = {color: \"#dd3db5\"}\n  const titleSize = {fontSize: 80,\n    color: \"#dd3db5\",\n    textAlign: \"center\",\n    paddingTop: \"100px\",}\n  const bodySize = {fontSize: 30,\n    color: \"#dd3db5\",\n    textAlign: \"center\",\n    paddingTop: \"100px\",\n  }\n\n  return (\n    \n    <div>\n        <br></br><br></br><br></br><br></br>\n        <hr style={styleObj}/>\n        <h1 style={titleSize} >Road map </h1>\n        <br></br><br></br><br></br><br></br>\n      <VerticalTimeline>\n        {timelineElements.map((element) => {\n          let isWorkIcon = element.icon === \"work\";\n          let showButton =\n            element.buttonText !== undefined &&\n            element.buttonText !== null &&\n            element.buttonText !== \"\";\n\n          return (\n            <VerticalTimelineElement\n              key={element.key}\n              date={element.date}\n              dateClassName=\"date\"\n              iconStyle={isWorkIcon ? workIconStyles : schoolIconStyles}\n              icon={isWorkIcon ? <WorkIcon /> : <SchoolIcon />}\n            >\n              <h3 className=\"vertical-timeline-element-title\" style={{color: \"#dd3db5\"}}>\n                {element.title}\n              </h3>\n              <h5 className=\"vertical-timeline-element-subtitle\">\n                {element.location}\n              </h5>\n              <p id=\"description\">{element.description}</p>\n              {showButton && (\n                <a\n                  className={`button ${\n                    isWorkIcon ? \"workButton\" : \"schoolButton\"\n                  }`}\n                  href=\"/\"\n                >\n                  {element.buttonText}\n                </a>\n              )}\n            </VerticalTimelineElement>\n          );\n        })}\n      </VerticalTimeline>\n    </div>\n  );\n}\n\nexport default Roadmap;","/Users/sjarancio/Desktop/panthers-live/panthers-live/src/About.js",["71"],"import React from 'react';\nimport image1 from './webBanner1.jpg'\n\nconst About = () => {\n\n  const styleObj = {color: \"#dd3db5\"}\n  const titleSize = {fontSize: 80,\n    color: \"#dd3db5\",\n    textAlign: \"center\",\n    paddingTop: \"100px\",\n    paddingRight: \"100px\",\n    paddingLeft: \"100px\",\n    paddingBottom: \"100px\"}\n  const bodySize = {fontSize: 25,\n    color: \"#dd3db5\",\n    textAlign: \"center\",\n    paddingTop: \"100px\",\n    paddingRight: \"100px\",\n    paddingLeft: \"100px\",\n    paddingBottom: \"100px\"}\n  const bannerSize = {\n    textAlign: \"center\",        \n    paddingLeft: \"10px\",\n    }\n\n  return (\n    <div >\n\n        <hr style={styleObj}/>\n        <h1 style={titleSize} >About </h1>\n        <h6 style={bodySize}>The Peaky Panthers are a collection of 8,888 unique and hand crafted NFT's living on the Avalanche C-Chain. The Panthers team and community strives to be leaders and set the standard for NFT projects built on Avalanche. Peaky Panther's hodlers will have access to an insane amount of community driven value including things such as cash giveaways, games, competitions, and events. Check out our Road Map to see some of the thing we have in store! Get involved today and cement yourself as an OG in the Peaky Panthers community! Mint Date to be announced soon! </h6>\n        <img class=\"center-image\" src={image1} alt=\"pp-banner\"/>\n    </div>\n  );\n};\n\nexport default About;\n","/Users/sjarancio/Desktop/panthers-live/panthers-live/src/redux/data/dataReducer.js",[],"/Users/sjarancio/Desktop/panthers-live/panthers-live/src/components/Navbar/indexx.js",[],"/Users/sjarancio/Desktop/panthers-live/panthers-live/src/redux/blockchain/blockchainReducer.js",[],"/Users/sjarancio/Desktop/panthers-live/panthers-live/src/redux/blockchain/blockchainActions.js",["72"],"// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","/Users/sjarancio/Desktop/panthers-live/panthers-live/src/styles/globalStyles.js",[],"/Users/sjarancio/Desktop/panthers-live/panthers-live/src/redux/data/dataActions.js",[],"/Users/sjarancio/Desktop/panthers-live/panthers-live/src/timelineElements.js",[],"/Users/sjarancio/Desktop/panthers-live/panthers-live/src/components/Navbar/NavbarElements.js",[],{"ruleId":"73","severity":1,"message":"74","line":1,"column":38,"nodeType":"75","messageId":"76","endLine":1,"endColumn":44},{"ruleId":"73","severity":1,"message":"77","line":3,"column":10,"nodeType":"75","messageId":"76","endLine":3,"endColumn":17},{"ruleId":"73","severity":1,"message":"78","line":8,"column":7,"nodeType":"75","messageId":"76","endLine":8,"endColumn":15},{"ruleId":"79","severity":1,"message":"80","line":194,"column":8,"nodeType":"81","endLine":194,"endColumn":28,"suggestions":"82"},{"ruleId":"73","severity":1,"message":"83","line":22,"column":9,"nodeType":"75","messageId":"76","endLine":22,"endColumn":17},{"ruleId":"73","severity":1,"message":"84","line":21,"column":9,"nodeType":"75","messageId":"76","endLine":21,"endColumn":19},{"ruleId":"85","severity":1,"message":"86","line":63,"column":23,"nodeType":"87","messageId":"88","endLine":63,"endColumn":25},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'connect' is defined but never used.","'truncate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["89"],"'bodySize' is assigned a value but never used.","'bannerSize' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"90","fix":"91"},"Update the dependencies array to be: [blockchain.account, getData]",{"range":"92","text":"93"},[5577,5597],"[blockchain.account, getData]"]